GIVEN:
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import codecademylib3_seaborn

                                                    INSPECT THE DATA!
  1. The first visualization your boss wants you to make is a scatterplot that shows average income in a state vs proportion of women in that state. Open some of the census csv files in 
the navigator (click the file icon in the top left corner of the code editor and then click on any of the csv files to open them). How are they named? What kind of information do they hold? 
Will they help us make this graph?
//
Named from states0.csv to states9.csv. In each there is a Column "State" holding different States info and Column "GenderPop" which hold information such as "2964003M_3081445F". 
After working with these columns the task may be implemented.
  2. It will be easier to inspect this data once we have it in a DataFrame. You canâ€™t even call .head() on these csvs! How are you supposed to read them? Using glob, loop through the census
files available and load them into DataFrames. Then, concatenate all of those DataFrames together into one DataFrame, called something like us_census.
//
import glob
files = glob.glob('states*.csv')
us_census_list = []
for filename in files:
  data = pd.read_csv(filename)
  us_census_list.append(data)
us_census = pd.concat(us_census_list)
print(us_census)                                      RESULT:

  Unnamed: 0	State	      TotalPop	Hispanic	          White	              Black	              Native	              Asian	              Pacific	              Income	            GenderPop
0	0	          Alabama	    4830620	  3.7516156462584975%	61.878656462585%	  31.25297619047618%	0.4532312925170065%	  1.0502551020408146%	0.03435374149659865%	$43296.35860306644	2341093M_2489527F
1	1	          Alaska	    733375	  5.909580838323351%	60.910179640718574%	2.8485029940119775%	16.39101796407186%	  5.450299401197604%	1.0586826347305378%  	$70354.74390243902	384160M_349215F
2	2	          Arizona	    6641928	  29.565921052631502%	57.120000000000026%	3.8509868421052658%	4.35506578947368%	    2.876578947368419%	0.16763157894736833%	$54207.82095490716	3299088M_3342840F
3	3	          Arkansas	  2958208	  6.215474452554738%	71.13781021897813%	18.968759124087573%	0.5229197080291965%	  1.1423357664233578%	0.14686131386861315%	$41935.63396778917	1451913M_1506295F
4	4	          California	38421464	37.291874687968054%	40.21578881677474%	5.677396405391911%	0.40529206190713685%	13.052234148776776%	0.35141038442336353%	$67264.78230266465	19087135M_19334329F

  3. Look at the .columns and the .dtypes of the us_census DataFrame. Are those datatypes going to hinder you as you try to make histograms?
//
print(us_census.columns)                              RESULT:
                                                      Index(['Unnamed: 0', 'State', 'TotalPop', 'Hispanic', 'White', 'Black', 'Native', 'Asian', 'Pacific', 'Income', 'GenderPop'], 
                                                      dtype='object')
print(us_census.dtypes)                               RESULT:
                                                      	            0
                                                      Unnamed: 0	  int64
                                                      State	        object
                                                      TotalPop	    int64
                                                      Hispanic	    object
                                                      White        	object
                                                      Black	        object
                                                      Native	      object
                                                      Asian	        object
                                                      Pacific	      object
                                                      Income	      object
                                                      GenderPop	    object
  4. Look at the .head() of the DataFrame so that you can understand why some of these dtypes are objects instead of integers or floats. Start to make a plan for how to convert these 
columns into the right types for manipulation.
//
Done. Above.
  5. Use regex to turn the Income column into a format that is ready for conversion into a numerical type.
//
us_census.Income = us_census['Income'].replace('[$,]', '', regex = True)
print(us_census.head())                                      RESULT:
  Unnamed: 0	State	      TotalPop	Hispanic	          White	              Black	              Native	              Asian	              Pacific	              Income	            GenderPop
0	0	          Alabama	    4830620	  3.7516156462584975%	61.878656462585%	  31.25297619047618%	0.4532312925170065%	  1.0502551020408146%	0.03435374149659865%	43296.35860306644	  2341093M_2489527F
1	1	          Alaska	    733375	  5.909580838323351%	60.910179640718574%	2.8485029940119775%	16.39101796407186%	  5.450299401197604%	1.0586826347305378%  	70354.74390243902	  384160M_349215F
2	2	          Arizona	    6641928	  29.565921052631502%	57.120000000000026%	3.8509868421052658%	4.35506578947368%	    2.876578947368419%	0.16763157894736833%	54207.82095490716	  3299088M_3342840F
3	3	          Arkansas	  2958208	  6.215474452554738%	71.13781021897813%	18.968759124087573%	0.5229197080291965%	  1.1423357664233578%	0.14686131386861315%	41935.63396778917	  1451913M_1506295F
4	4	          California	38421464	37.291874687968054%	40.21578881677474%	5.677396405391911%	0.40529206190713685%	13.052234148776776%	0.35141038442336353%	67264.78230266465	  19087135M_19334329F
  6. Look at the GenderPop column. We are going to want to separate this into two columns, the Men column, and the Women column. Split the column into those two new columns using str.split 
and separating out those results.
//




